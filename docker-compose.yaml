services:
  modular-monolith-crm-db:
    container_name: modular-monolith-crm-db
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      PGDATA: /var/lib/postgresql/data
    volumes:
      - modular-monolith-crm-data:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - modular-monolith-crm-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 5s
      timeout: 5s
      retries: 10

  modular-monolith-crm-auth-server:
    container_name: modular-monolith-crm-auth-server
    image: quay.io/keycloak/keycloak:26.0.0
    ports:
      - "9000:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: secret
    volumes:
      - ./docs/crm-realm.json:/opt/keycloak/data/import/crm-realm.json
    command:
      - "start-dev"
      - "--import-realm"
    networks:
      - modular-monolith-crm-net

  modular-monolith-crm-api:
    container_name: modular-monolith-crm-api
    build:
      context: .
    environment:
      DATABASE_URL: jdbc:postgresql://modular-monolith-crm-db:5432
      DATABASE_NAME: admin
      DATABASE_PASSWORD: secret
      AUTH_SERVER_URL: http://modular-monolith-crm-auth-server:8080
      AUTH_SERVER_REALM: crm-realm
      AUTH_SERVER_API_CLIENT_ID: crm-api-client
      AUTH_SERVER_API_CLIENT_SECRET: u9Ukq7VL4SXCyStfGjdY9RJHSOpvYDRB
    ports:
      - "8000:8000"
    depends_on:
      modular-monolith-crm-auth-server:
        condition: service_started
    networks:
      - modular-monolith-crm-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 10

  modular-monolith-crm-ux:
    container_name: modular-monolith-crm-ux
    build:
      context: ./ux
    ports:
      - "4200:80"
    depends_on:
      modular-monolith-crm-api:
        condition: service_healthy
    networks:
      - modular-monolith-crm-net

networks:
  modular-monolith-crm-net:
    driver: bridge

volumes:
  modular-monolith-crm-data: